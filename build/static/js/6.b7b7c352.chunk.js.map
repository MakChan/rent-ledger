{"version":3,"sources":["pages/AddTenant.js"],"names":["ADD_TENANT","gql","_templateObject","AddTenant","userState","useAuthContext","_useQuery","useQuery","GET_ROOMS","variables","landlordId","user","landlord","_id","data","loading","_useMutation","useMutation","onCompleted","console","log","update","cache","_ref","addTenant","rooms","readQuery","query","map","room","_objectSpread","currentLease","writeQuery","_useMutation2","Object","C_Users_mayan_Documents_GitHub_rent_ledger_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","tenantData","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Loader__WEBPACK_IMPORTED_MODULE_17__","size","options","filter","option","label","roomNo","value","length","style","textAlign","marginTop","date","Date","_atlaskit_icon_glyph_check_circle_outline__WEBPACK_IMPORTED_MODULE_12___default","primaryColor","padding","_atlaskit_form__WEBPACK_IMPORTED_MODULE_5__","onSubmit","lease","assign","rent","parseInt","extraCharges","initialReading","tenant","_ref2","formProps","submitting","_atlaskit_form__WEBPACK_IMPORTED_MODULE_6__","name","isRequired","defaultValue","_ref3","fieldProps","_atlaskit_select__WEBPACK_IMPORTED_MODULE_9__","placeholder","_ref4","_atlaskit_textfield__WEBPACK_IMPORTED_MODULE_8__","autoComplete","_ref5","type","_ref6","undefined","_ref7","_ref8","_ref9","_atlaskit_datetime_picker__WEBPACK_IMPORTED_MODULE_10__","_ref10","_ref11","_atlaskit_textarea__WEBPACK_IMPORTED_MODULE_11__","resize","_atlaskit_form__WEBPACK_IMPORTED_MODULE_7__","_atlaskit_button__WEBPACK_IMPORTED_MODULE_4__","appearance","disabled","isLoading"],"mappings":"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","file":"static/js/6.b7b7c352.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@atlaskit/button\";\r\nimport Form, {\r\n  Field,\r\n  FormFooter,\r\n  HelperMessage,\r\n  ErrorMessage,\r\n  ValidMessage\r\n} from \"@atlaskit/form\";\r\nimport TextField from \"@atlaskit/textfield\";\r\nimport Select from \"@atlaskit/select\";\r\nimport { DatePicker } from \"@atlaskit/datetime-picker\";\r\nimport TextArea from \"@atlaskit/textarea\";\r\nimport CheckCircleOutlineIcon from \"@atlaskit/icon/glyph/check-circle-outline\";\r\n\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport { useAuthContext } from \"../utils/authContext\";\r\nimport { GET_ROOMS } from \"../utils/queries\";\r\n\r\nimport { Loader, Wrapper } from \"../components/Loader\";\r\n\r\nconst ADD_TENANT = gql`\r\n  mutation addTenant($lease: LeaseInput!, $tenant: TenantInput!) {\r\n    createTenantWithLease(lease: $lease, tenant: $tenant) {\r\n      _id\r\n      rent\r\n      room\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddTenant = () => {\r\n  const { userState } = useAuthContext();\r\n\r\n  const { data, loading } = useQuery(GET_ROOMS, {\r\n    variables: { landlordId: userState.user.landlord._id }\r\n  });\r\n\r\n  const [addTenant, { data: tenantData }] = useMutation(ADD_TENANT, {\r\n    onCompleted: data => {\r\n      console.log(\"data\", data);\r\n      // Redirect to the room page\r\n      // Update rooms cache\r\n      //   setUser(data.logIn);\r\n      //   history.push(\"/\");\r\n    },\r\n    update(\r\n      cache,\r\n      {\r\n        data: { addTenant }\r\n      }\r\n    ) {\r\n      let { rooms } = cache.readQuery({ query: GET_ROOMS });\r\n      console.log(\"rooms ==>\", rooms); // TODO: remove this\r\n      console.log(\"addTenant ==>\", addTenant); // TODO: remove this\r\n\r\n      rooms = rooms.map(room => {\r\n        if (addTenant.room == room._id) {\r\n          let updatedRoom = { ...room, currentLease: addTenant };\r\n          return updatedRoom;\r\n        }\r\n        return room;\r\n      });\r\n      cache.writeQuery({\r\n        query: GET_ROOMS,\r\n        data: { rooms }\r\n      });\r\n    }\r\n  });\r\n\r\n  if (loading) return <Loader size=\"large\" />;\r\n\r\n  const options = data.rooms\r\n    .filter(room => !room.currentLease)\r\n    .map(option => ({\r\n      label: option.roomNo,\r\n      value: option._id\r\n    }));\r\n\r\n  if (options.length === 0)\r\n    return (\r\n      <h4 style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\r\n        No vacant rooms.\r\n      </h4>\r\n    );\r\n\r\n  const date = new Date();\r\n\r\n  const handleSubmit = data => {\r\n    let lease = Object.assign({}, data.lease);\r\n    lease.room = data.lease.room.value;\r\n    lease.date = new Date(\r\n      data.lease.date ? data.lease.date : data[\"lease.date\"]\r\n    );\r\n    lease.rent = lease.rent && parseInt(lease.rent);\r\n    lease.extraCharges = lease.extraCharges && parseInt(lease.extraCharges);\r\n    lease.initialReading =\r\n      lease.initialReading && parseInt(lease.initialReading);\r\n    addTenant({ variables: { lease, tenant: data.tenant } });\r\n  };\r\n\r\n  if (tenantData)\r\n    return (\r\n      <Wrapper>\r\n        <CheckCircleOutlineIcon size=\"xlarge\" primaryColor=\"green\" />\r\n        <div>Saved</div>\r\n      </Wrapper>\r\n    );\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem 2rem\" }}>\r\n      <h3>Add Tenant</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        {({ formProps, submitting }) => (\r\n          <form {...formProps}>\r\n            <Field name=\"lease.room\" label=\"Room\" isRequired defaultValue=\"\">\r\n              {({ fieldProps }) => (\r\n                <Select\r\n                  {...fieldProps}\r\n                  options={options}\r\n                  placeholder=\"Choose a room\"\r\n                />\r\n              )}\r\n            </Field>\r\n            <Field name=\"tenant.name\" label=\"Name\" isRequired defaultValue=\"\">\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} />\r\n              )}\r\n            </Field>\r\n            <Field\r\n              name=\"tenant.phoneNumber\"\r\n              label=\"Phone Number\"\r\n              defaultValue=\"\"\r\n            >\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} type=\"number\" />\r\n              )}\r\n            </Field>\r\n            <Field\r\n              name=\"tenant.aadharNumber\"\r\n              label=\"Aadhar Number\"\r\n              defaultValue=\"\"\r\n            >\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} type=\"number\" />\r\n              )}\r\n            </Field>\r\n            <Field name=\"lease.rent\" label=\"Rent\" defaultValue={undefined}>\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} type=\"number\" />\r\n              )}\r\n            </Field>\r\n            <Field name=\"lease.initialReading\" label=\"Reading\" defaultValue=\"\">\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} type=\"number\" />\r\n              )}\r\n            </Field>\r\n            <Field name=\"lease.date\" label=\"Date\" defaultValue={date}>\r\n              {({ fieldProps }) => <DatePicker {...fieldProps} />}\r\n            </Field>\r\n            <Field\r\n              name=\"lease.extraCharges\"\r\n              label=\"Extra Charges\"\r\n              defaultValue=\"\"\r\n            >\r\n              {({ fieldProps }) => (\r\n                <TextField autoComplete=\"off\" {...fieldProps} type=\"number\" />\r\n              )}\r\n            </Field>\r\n            <Field name=\"lease.remark\" label=\"Remarks\" defaultValue=\"\">\r\n              {({ fieldProps }) => <TextArea resize=\"smart\" {...fieldProps} />}\r\n            </Field>\r\n\r\n            <FormFooter>\r\n              <Button\r\n                type=\"submit\"\r\n                appearance=\"primary\"\r\n                disabled={submitting}\r\n                isLoading={submitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </FormFooter>\r\n          </form>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTenant;\r\n"],"sourceRoot":""}