{"version":3,"sources":["utils/routerContext.js","components/Header.js","components/AuthRoute.js","components/Rooms.js","pages/Home.js","pages/SignIn.js","pages/SignUp.js","App.js","serviceWorker.js","index.js","utils/authContext.js","components/Loader.js","utils/queries.js"],"names":["RouterContext","React","useRouter","Nav","styled","nav","_templateObject","Box","div","_templateObject2","Navbar","props","history","react_default","a","createElement","Button","onClick","push","iconBefore","home_default","size","user","landlord","name","logOut","appearance","Header","header","AuthRoute_templateObject","AuthRoute_templateObject2","BoxInner","_templateObject3","AuthRoute","_ref","Component","component","title","rest","Object","objectWithoutProperties","react_router","assign","render","AuthRoute_Box","AuthRoute_Header","Rooms","userState","_useQuery","useQuery","GET_ROOMS","variables","landlordId","_id","data","loading","style","padding","Loader","rooms","map","room","key","roomNo","currentLease","tenant","Home_templateObject","VerticalBox","Home_templateObject2","Home","useAuthContext","Home_Box","components_Rooms","type","LOG_IN","gql","SignIn_templateObject","SignIn","_useAuthContext","setUser","_useMutation","useMutation","onCompleted","logIn","_useMutation2","slicedToArray","objectDestructuringEmpty","useEffect","Form","onSubmit","formProps","submitting","Field","label","isRequired","defaultValue","_ref2","fieldProps","error","Textfield","autoComplete","validate","value","length","undefined","_ref3","valid","Fragment","Messages","FormFooter","ButtonGroup","isLoading","CREATE_USER","SignUp_templateObject","SignUp","createUser","_ref4","AddTenant","lazy","Promise","all","__webpack_require__","e","then","bind","AcceptPayment","NoMatch","Container","App_templateObject","GuardedRoute","_useAuthContext2","to","pathname","App","loaded","components_AuthRoute","path","exact","react","fallback","App_GuardedRoute","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","process","client","ApolloClient","uri","headers","x-token","localStorage","getItem","ReactDOM","react_common_esm","authContext","children","react_router_dom","routeProps","Provider","src_App","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","GET_ME","initialState","AuthContext","createContext","UserProvider","_useState","useState","_useState2","C_Users_mayan_Documents_GitHub_rent_ledger_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setUserState","_useLazyQuery","useLazyQuery","asfas","me","_useLazyQuery2","token","JSON","parse","react__WEBPACK_IMPORTED_MODULE_2___default","setItem","stringify","removeItem","useContext","Wrapper","react__WEBPACK_IMPORTED_MODULE_1___default","_atlaskit_spinner__WEBPACK_IMPORTED_MODULE_3__","GET_CURRENT_LEASES"],"mappings":"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","file":"static/js/main.624a3e31.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nconst RouterContext = React.createContext(null);\r\n\r\nexport const HookedBrowserRouter = ({ children }) => (\r\n  <BrowserRouter>\r\n    <Route>\r\n      {routeProps => (\r\n        <RouterContext.Provider value={routeProps}>\r\n          {children}\r\n        </RouterContext.Provider>\r\n      )}\r\n    </Route>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport function useRouter() {\r\n  return React.useContext(RouterContext);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@atlaskit/button\";\r\nimport HomeIcon from \"@atlaskit/icon/glyph/home\";\r\n\r\nimport { useRouter } from \"../utils/routerContext\";\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 20px;\r\n  background: #c4a3ff;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Navbar = props => {\r\n  const { history } = useRouter();\r\n  return (\r\n    <div>\r\n      <Nav>\r\n        <Button\r\n          onClick={() => history.push(\"/\")}\r\n          iconBefore={<HomeIcon size=\"medium\" />}\r\n        />\r\n        <Box>\r\n          <span>\r\n            Hi, <b>{props.user && props.user.landlord.name}</b>\r\n          </span>\r\n          <Button onClick={props.logOut} appearance=\"link\">\r\n            Logout\r\n          </Button>\r\n        </Box>\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  background-color: rgb(45, 51, 58);\r\n  padding: 1rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 400px;\r\n  max-width: 100%;\r\n  margin: 10% auto;\r\n  background-color: #fbfbfb;\r\n  box-shadow: 0 0px 20px #e7e7e7;\r\n`;\r\n\r\nconst BoxInner = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst AuthRoute = ({ component: Component, title, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      <Box>\r\n        <Header>{title}</Header>\r\n        <BoxInner>\r\n          <Component {...props} />\r\n        </BoxInner>\r\n      </Box>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { GET_ROOMS } from \"../utils/queries\";\r\n\r\nimport { Loader } from \"../components/Loader\";\r\n\r\nfunction Rooms({ userState }) {\r\n  const { data, loading } = useQuery(GET_ROOMS, {\r\n    variables: { landlordId: userState.user.landlord._id }\r\n  });\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      <h2>Rooms</h2>\r\n      {loading ? (\r\n        <Loader size=\"medium\" />\r\n      ) : (\r\n        data.rooms.map(room => (\r\n          <div key={room.roomNo}>\r\n            <h4>\r\n              {room.roomNo} -{\" \"}\r\n              {room.currentLease ? room.currentLease.tenant.name : \"Vacant\"}\r\n            </h4>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rooms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@atlaskit/button\";\r\n\r\nimport { useAuthContext } from \"../utils/authContext\";\r\nimport { useRouter } from \"../utils/routerContext\";\r\n\r\nimport Rooms from \"../components/Rooms\";\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst VerticalBox = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  border-left: 1px dotted;\r\n`;\r\n\r\nfunction Home() {\r\n  const { userState } = useAuthContext();\r\n  const { history } = useRouter();\r\n\r\n  return (\r\n    <Box>\r\n      <Rooms userState={userState} />\r\n      <VerticalBox>\r\n        <Button\r\n          type=\"submit\"\r\n          appearance=\"primary\"\r\n          onClick={() => history.push(\"payment/accept\")}\r\n        >\r\n          Accept Payment\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          appearance=\"subtle\"\r\n          onClick={() => history.push(\"tenants/add\")}\r\n        >\r\n          Add Tenant\r\n        </Button>\r\n        <Button type=\"submit\" appearance=\"subtle\">\r\n          End Lease\r\n        </Button>\r\n      </VerticalBox>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\r\nimport TextField from \"@atlaskit/textfield\";\r\nimport Form, {\r\n  Field,\r\n  FormFooter,\r\n  HelperMessage,\r\n  ErrorMessage,\r\n  ValidMessage\r\n} from \"@atlaskit/form\";\r\n\r\nimport { useAuthContext } from \"../utils/authContext\";\r\nimport { useRouter } from \"../utils/routerContext\";\r\n\r\nconst LOG_IN = gql`\r\n  mutation LogIn($username: String!, $password: String!) {\r\n    logIn(username: $username, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n        landlord {\r\n          _id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignIn = () => {\r\n  const { setUser, userState } = useAuthContext();\r\n  const { history } = useRouter();\r\n\r\n  const [logIn, {}] = useMutation(LOG_IN, {\r\n    onCompleted: data => {\r\n      setUser(data.logIn);\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userState.user) history.push(\"/\");\r\n  }, [userState.user]);\r\n\r\n  return (\r\n    <Form onSubmit={data => logIn({ variables: data })}>\r\n      {({ formProps, submitting }) => (\r\n        <form {...formProps}>\r\n          <Field name=\"username\" label=\"Username\" isRequired defaultValue=\"\">\r\n            {({ fieldProps, error }) => (\r\n              <TextField autoComplete=\"off\" {...fieldProps} />\r\n            )}\r\n          </Field>\r\n          <Field\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            defaultValue=\"\"\r\n            isRequired\r\n            validate={value => (value.length < 8 ? \"TOO_SHORT\" : undefined)}\r\n          >\r\n            {({ fieldProps, error, valid }) => (\r\n              <>\r\n                <TextField type=\"password\" autoComplete=\"off\" {...fieldProps} />\r\n                {error && <ErrorMessage>Wrong Password</ErrorMessage>}\r\n              </>\r\n            )}\r\n          </Field>\r\n\r\n          <FormFooter>\r\n            <ButtonGroup>\r\n              <Button\r\n                onClick={() => history.push(\"/register\")}\r\n                appearance=\"subtle\"\r\n              >\r\n                Register\r\n              </Button>\r\n              <Button type=\"submit\" appearance=\"primary\" isLoading={submitting}>\r\n                Login\r\n              </Button>\r\n            </ButtonGroup>\r\n          </FormFooter>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\r\nimport TextField from \"@atlaskit/textfield\";\r\nimport Form, {\r\n  Field,\r\n  FormFooter,\r\n  HelperMessage,\r\n  ErrorMessage,\r\n  ValidMessage\r\n} from \"@atlaskit/form\";\r\n\r\nimport { useAuthContext } from \"../utils/authContext\";\r\nimport { useRouter } from \"../utils/routerContext\";\r\n\r\nconst CREATE_USER = gql`\r\n  mutation CreateUser($name: String!, $username: String!, $password: String!) {\r\n    createUser(name: $name, username: $username, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n        landlord {\r\n          _id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignUp = () => {\r\n  const { setUser } = useAuthContext();\r\n  const { history } = useRouter();\r\n\r\n  const [createUser, {}] = useMutation(CREATE_USER, {\r\n    onCompleted: data => {\r\n      setUser(data.createUser);\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n      <Form onSubmit={data => createUser({ variables: data })}>\r\n        {({ formProps, submitting }) => (\r\n          <form {...formProps}>\r\n            <Field name=\"name\" label=\"Name\" isRequired defaultValue=\"\">\r\n              {({ fieldProps, error }) => (\r\n                <>\r\n                  <TextField autoComplete=\"off\" {...fieldProps} />\r\n                  {!error && (\r\n                    <HelperMessage>You can only use letters.</HelperMessage>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Field>\r\n            <Field name=\"username\" label=\"User name\" isRequired defaultValue=\"\">\r\n              {({ fieldProps, error }) => (\r\n                <>\r\n                  <TextField autoComplete=\"off\" {...fieldProps} />\r\n                  {!error && (\r\n                    <HelperMessage>\r\n                      You can use letters & numbers.\r\n                    </HelperMessage>\r\n                  )}\r\n                  {error && (\r\n                    <ErrorMessage>\r\n                      This user name is already in use, try another one.\r\n                    </ErrorMessage>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Field>\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              defaultValue=\"\"\r\n              isRequired\r\n              validate={value => (value.length < 8 ? \"TOO_SHORT\" : undefined)}\r\n            >\r\n              {({ fieldProps, error, valid }) => (\r\n                <>\r\n                  <TextField type=\"password\" {...fieldProps} />\r\n                  {!error && !valid && (\r\n                    <HelperMessage>\r\n                      Use 8 or more characters with a mix of letters, numbers &\r\n                      symbols.\r\n                    </HelperMessage>\r\n                  )}\r\n                  {error && (\r\n                    <ErrorMessage>\r\n                      Password needs to be more than 8 characters.\r\n                    </ErrorMessage>\r\n                  )}\r\n                  {valid && <ValidMessage>Awesome password!</ValidMessage>}\r\n                </>\r\n              )}\r\n            </Field>\r\n\r\n            <FormFooter>\r\n              <ButtonGroup>\r\n                <Button\r\n                  onClick={() => history.push(\"/login\")}\r\n                  appearance=\"subtle\"\r\n                >\r\n                  Login\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  appearance=\"primary\"\r\n                  isLoading={submitting}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </ButtonGroup>\r\n            </FormFooter>\r\n          </form>\r\n        )}\r\n      </Form>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useAuthContext } from \"./utils/authContext\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport AuthRoute from \"./components/AuthRoute\";\r\nimport { Loader } from \"./components/Loader\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport SignUp from \"./pages/SignUp\";\r\n\r\nconst AddTenant = lazy(() => import(\"./pages/AddTenant\"));\r\nconst AcceptPayment = lazy(() => import(\"./pages/AcceptPayment\"));\r\nconst NoMatch = lazy(() => import(\"./pages/NoMatch\"));\r\n\r\nconst Container = styled.div`\r\n  max-width: 700px;\r\n  min-height: 80vh;\r\n  margin: 5% auto 0;\r\n  box-shadow: 0 0px 20px #e7e7e7;\r\n  background-color: #fbfbfb;\r\n`;\r\n\r\nfunction App() {\r\n  const { userState } = useAuthContext();\r\n\r\n  if (!userState.loaded) return <Loader size=\"medium\" />;\r\n\r\n  return (\r\n    <Switch>\r\n      <AuthRoute path=\"/login\" exact component={SignIn} title=\"Login\" />\r\n      <AuthRoute path=\"/register\" exact component={SignUp} title=\"Register\" />\r\n\r\n      <Container>\r\n        <Suspense fallback={<Loader size=\"large\" />}>\r\n          <GuardedRoute path=\"/\" exact component={Home} />\r\n          <GuardedRoute path=\"/tenants/add\" exact component={AddTenant} />\r\n          <GuardedRoute\r\n            path=\"/payment/accept\"\r\n            exact\r\n            component={AcceptPayment}\r\n          />\r\n        </Suspense>\r\n      </Container>\r\n\r\n      <Route component={NoMatch} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst GuardedRoute = ({ component: Component, ...rest }) => {\r\n  const { userState, logOut } = useAuthContext();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !userState.user ? (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        ) : (\r\n          <>\r\n            <Header user={userState.user} logOut={logOut} />\r\n            <main>\r\n              <Component {...props} />\r\n            </main>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport { UserProvider } from \"./utils/authContext\";\nimport { HookedBrowserRouter } from \"./utils/routerContext\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nconsole.log('REACT_APP_GRAPHQL_URI ==>', process.env.REACT_APP_GRAPHQL_URI); // TODO: remove this\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_URI,\n  headers: {\n    \"x-token\": localStorage.getItem(\"x-token\")\n  }\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <UserProvider>\n      <HookedBrowserRouter>\n        <App />\n      </HookedBrowserRouter>\n    </UserProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nconst GET_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      landlord {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst initialState = { user: undefined, loaded: false };\r\n\r\nexport const AuthContext = React.createContext({\r\n  userState: initialState,\r\n  setUser: () => {},\r\n  logOut: () => {}\r\n});\r\n\r\nexport const UserProvider = props => {\r\n  const [userState, setUserState] = useState(initialState);\r\n  const [getMe, { data }] = useLazyQuery(GET_ME, {\r\n    variables: { asfas: true },\r\n    onCompleted({ me }) {\r\n      console.log(\"onCompleted\"); // TODO: remove this\r\n      console.log(\"data\", me);\r\n      setUserState({ user: me });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"x-token\");\r\n    console.log(\"token ==>\", token); // TODO: remove this\r\n    if (token && token !== \"undefined\") {\r\n      console.log(\"getMe\"); // TODO: remove this\r\n      // getMe({ variables: { asfas: true } });\r\n      setUserState({\r\n        loaded: true,\r\n        user: JSON.parse(localStorage.getItem(\"user\"))\r\n      });\r\n    } else {\r\n      setUserState({\r\n        loaded: true\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const setUser = data => {\r\n    console.log(\"data ==>\", data); // TODO: remove this\r\n    localStorage.setItem(\"x-token\", data.token);\r\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n    setUserState({ user: data.user, loaded: true });\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"x-token\");\r\n    setUserState({ user: undefined, loaded: true });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userState,\r\n        setUser,\r\n        logOut\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuthContext = () => useContext(AuthContext);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Spinner from \"@atlaskit/spinner\";\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Loader = props => (\r\n  <Wrapper>\r\n    <Spinner {...props} />\r\n  </Wrapper>\r\n);\r\n\r\nexport { Loader, Wrapper };\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_ROOMS = gql`\r\n  query getRooms($landlordId: String!) {\r\n    rooms(_id: $landlordId) {\r\n      _id\r\n      roomNo\r\n      currentLease {\r\n        _id\r\n        rent\r\n        current\r\n        tenant {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CURRENT_LEASES = gql`\r\n  query {\r\n    currentLeases {\r\n      _id\r\n      rent\r\n      initialReading\r\n      tenant {\r\n        name\r\n      }\r\n      lastPayment {\r\n        reading\r\n        balance\r\n      }\r\n      room {\r\n        roomNo\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}